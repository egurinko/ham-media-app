generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ar_internal_metadata {
  key        String   @id @db.VarChar(255)
  value      String?  @db.VarChar(255)
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)
}

model HospitalAddressGeoLocation {

  id                  BigInt          @id @default(autoincrement())
  hospital_address_id BigInt          @unique
  latitude            Float           @db.Float
  longitude           Float           @db.Float
  created_at          DateTime        @db.DateTime(0) @default(now())
  updated_at          DateTime        @db.DateTime(0) @default(now())
  hospitalAddress     HospitalAddress @relation(fields: [hospital_address_id], references: [id])
  @@map(name: "hospital_address_geo_locations")
}

model HospitalAddress {

  id                         BigInt                      @id @default(autoincrement())
  hospital_id                BigInt                      @unique
  prefecture_id              BigInt
  address                    String                      @db.VarChar(255)
  phone_number               String                      @db.VarChar(255)
  created_at                 DateTime                    @db.DateTime(0) @default(now())
  updated_at                 DateTime                    @db.DateTime(0) @default(now())
  hospital                   Hospital                    @relation(fields: [hospital_id], references: [id])
  hospitalAddressGeoLocation HospitalAddressGeoLocation?

  @@unique([address, phone_number], name: "idx_hospital_addresses_4")
  @@index([prefecture_id], name: "idx_hospital_addresses_2")
  @@index([address], name: "idx_hospital_addresses_3")
  @@map(name: "hospital_addresses")
}

model HospitalBusinessForm {

  id                BigInt   @id @default(autoincrement())
  hospital_id       BigInt   @unique
  business_hour     String   @db.VarChar(255)
  closed_day        String   @db.VarChar(255)
  insurance_enabled String   @db.VarChar(255)
  remark            String   @db.Text
  created_at        DateTime @db.DateTime(0) @default(now())
  updated_at        DateTime @db.DateTime(0) @default(now())
  hospital          Hospital @relation(fields: [hospital_id], references: [id])

  @@index([business_hour], name: "idx_hospital_business_forms_2")
  @@index([closed_day], name: "idx_hospital_business_forms_4")
  @@index([insurance_enabled], name: "idx_hospital_business_forms_6")
  @@map(name: "hospital_business_forms")
}

model HospitalCertificationOption {

  id                 BigInt   @id @default(autoincrement())
  hospital_id        BigInt   @unique
  nichiju_registered String   @db.VarChar(255)
  jsava_registered   String   @db.VarChar(255)
  created_at         DateTime @db.DateTime(0) @default(now())
  updated_at         DateTime @db.DateTime(0) @default(now())
  hospital           Hospital @relation(fields: [hospital_id], references: [id])

  @@index([nichiju_registered], name: "idx_hospital_certification_options_2")
  @@index([jsava_registered], name: "idx_hospital_certification_options_3")
  @@map(name: "hospital_certification_options")
}

model HospitalInternalReputation {

  id          BigInt   @id @default(autoincrement())
  hospital_id BigInt   @unique
  star        Int
  remark      String   @db.Text
  created_at  DateTime @db.DateTime(0) @default(now())
  updated_at  DateTime @db.DateTime(0) @default(now())
  hospital    Hospital @relation(fields: [hospital_id], references: [id])

  @@index([star], name: "idx_hospital_internal_reputations_2")
  @@map(name: "hospital_internal_reputations")
}

model HospitalNightServiceOption {

  id          BigInt   @id @default(autoincrement())
  hospital_id BigInt   @unique
  status      String   @db.VarChar(255)
  remark      String   @db.Text
  created_at  DateTime @db.DateTime(0) @default(now())
  updated_at  DateTime @db.DateTime(0) @default(now())
  hospital    Hospital @relation(fields: [hospital_id], references: [id])

  @@index([status], name: "idx_hospital_night_service_option_2")
  @@map(name: "hospital_night_service_options")
}

model HospitalNightUrgentActionOption {

  id          BigInt   @id @default(autoincrement())
  hospital_id BigInt   @unique
  status      String   @db.VarChar(255)
  created_at  DateTime @db.DateTime(0) @default(now())
  updated_at  DateTime @db.DateTime(0) @default(now())
  hospital    Hospital @relation(fields: [hospital_id], references: [id])

  @@index([status], name: "idx_hospital_night_urgent_action_options_2")
  @@map(name: "hospital_night_urgent_action_options")
}

model HospitalReservationStatus {

  id          BigInt   @id @default(autoincrement())
  hospital_id BigInt   @unique
  required    String   @db.VarChar(255)
  reservable  String   @db.VarChar(255)
  remark      String   @db.Text
  created_at  DateTime @db.DateTime(0) @default(now())
  updated_at  DateTime @db.DateTime(0) @default(now())
  hospital    Hospital @relation(fields: [hospital_id], references: [id])

  @@index([required], name: "idx_hospital_reservation_statuses_2")
  @@index([reservable], name: "idx_hospital_reservation_statuses_3")
  @@map(name: "hospital_reservation_statuses")
}

model Hospital {

  id                              BigInt                           @id @default(autoincrement())
  name                            String                           @db.VarChar(255)
  url                             String                           @db.VarChar(255)
  deleted                         Boolean                          @default(false)
  internal_memo                   String                           @db.Text
  created_at                      DateTime                         @db.DateTime(0) @default(now())
  updated_at                      DateTime                         @db.DateTime(0) @default(now())
  hospitalAddress                 HospitalAddress?
  hospitalBusinessForm            HospitalBusinessForm?
  hospitalCertificationOption     HospitalCertificationOption?
  hospitalInternalReputation      HospitalInternalReputation?
  hospitalNightServiceOption      HospitalNightServiceOption?
  hospitalNightUrgentActionOption HospitalNightUrgentActionOption?
  hospitalReservationStatus       HospitalReservationStatus?

  @@index([name], name: "idx_hospitals_1")
  @@index([url], name: "idx_hospitals_2")
  @@index([deleted], name: "idx_hospitals_3")
  @@map(name: "hospitals")
}

model InternalUserLoginSession {

  id               BigInt       @id @default(autoincrement())
  internal_user_id BigInt
  token            String       @unique @db.VarChar(255)
  created_at       DateTime     @db.DateTime(0) @default(now())
  updated_at       DateTime     @db.DateTime(0) @default(now())
  internal_users   InternalUser @relation(fields: [internal_user_id], references: [id])

  @@index([internal_user_id], name: "idx_internal_user_login_sessions_1")
  @@map(name: "internal_user_login_sessions")
}

model InternalUser {

  id                        BigInt                     @id @default(autoincrement())
  name                      String                     @db.VarChar(255)
  email                     String                     @unique @db.VarChar(255)
  password_digest           String                     @db.VarChar(255)
  created_at                DateTime                   @db.DateTime(0) @default(now())
  updated_at                DateTime                   @db.DateTime(0) @default(now())
  internalUserLoginSessions InternalUserLoginSession[]

  @@index([name], name: "idx_internal_users_1")
  @@index([password_digest], name: "idx_internal_users_3")
  @@map(name: "internal_users")
}

model Prefecture {

  id         BigInt   @id @default(autoincrement())
  region_id  BigInt
  name       String   @unique @db.VarChar(255)
  created_at DateTime @db.DateTime(0) @default(now())
  updated_at DateTime @db.DateTime(0) @default(now())
  regions    Region   @relation(fields: [region_id], references: [id])

  @@index([region_id], name: "idx_prefectures_2")
  @@map(name: "prefectures")
}

model Region {

  id          BigInt       @id @default(autoincrement())
  name        String       @unique @db.VarChar(255)
  created_at  DateTime     @db.DateTime(0) @default(now())
  updated_at  DateTime     @db.DateTime(0) @default(now())
  prefectures Prefecture[]
  @@map(name: "regions")
}

model schema_migrations {
  version String @id @db.VarChar(255)
}
