name: Ham-Media backend app

on:
  push:
    paths:
      - backend/**
      - .github/workflows/backend.yml
      - package.json
      - yarn.lock

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/ham_media_app_test
      JWT_TOKEN: test
      PORT: 3000
      GOOGLE_API_KEY: test
      LINE_CHANNEL_ACCESS_TOKEN: test
      LINE_CHANNEL_SECRET: test
      AWS_BUCKET_NAME: test
      NODE_OPTIONS: '--max_old_space_size=4096'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '18.16.1'
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install
        working-directory: ./backend
      - name: Build
        run: yarn build
        working-directory: ./backend
  test:
    permissions:
      checks: write
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ham_media_app_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/ham_media_app_test
      JWT_TOKEN: test
      PORT: 3000
      GOOGLE_API_KEY: test
      LINE_CHANNEL_ACCESS_TOKEN: test
      LINE_CHANNEL_SECRET: test
      AWS_BUCKET_NAME: test
      NODE_OPTIONS: '--max_old_space_size=4096'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '18.16.1'
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}
      - name: Install dependencies
        run: yarn install
        working-directory: ./backend
      - name: Setup database
        run: yarn db:push
        working-directory: ./backend
      - name: Generate types from prisma
        run: yarn db:reflect
        working-directory: ./backend
      - name: Run tests
        run: yarn test:ci
        working-directory: ./backend
      - name: Coverage
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          coverage-file: ./report.json
          working-directory: ./backend
