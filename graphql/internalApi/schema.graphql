### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BatchPayload {
  count: Int!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

input CreateProductTagsProductTagInputType {
  name: String!
}

input CreateStockRequestrequestProductsInputType {
  count: Int!
  productId: Int!
}

input CreateStocksStocksInputType {
  amount: Int!
  expiredAt: DateTime!
  internalUserId: BigInt!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Delete {
  deleted: Boolean!
}

"""A hospital"""
type Hospital {
  deleted: Boolean!
  hospitalAddress: HospitalAddress
  hospitalBusinessForm: HospitalBusinessForm
  hospitalCertificationOption: HospitalCertificationOption
  hospitalInternalReputation: HospitalInternalReputation
  hospitalNightServiceOption: HospitalNightServiceOption
  hospitalNightUrgentActionOption: HospitalNightUrgentActionOption
  hospitalReservationStatus: HospitalReservationStatus
  id: BigInt!
  internal_memo: String!
  name: String!
  url: String!
}

"""A hospital address"""
type HospitalAddress {
  address: String!
  hospitalAddressGeoLocation: HospitalAddressGeoLocation
  id: BigInt!
  phone_number: String!
  prefecture: Prefecture!
}

"""A hospital address geo location"""
type HospitalAddressGeoLocation {
  id: BigInt!
  latitude: Float!
  longitude: Float!
}

input HospitalAddressInputType {
  address: String!
  phone_number: String!
  prefecture_id: BigInt!
}

"""A hospital business form"""
type HospitalBusinessForm {
  business_hour: String!
  closed_day: String!
  id: BigInt!
  insurance_enabled: String!
  remark: String!
}

input HospitalBusinessFormInputType {
  business_hour: String!
  closed_day: String!
  insurance_enabled: String!
  remark: String!
}

"""A hospital certification option"""
type HospitalCertificationOption {
  id: BigInt!
  jsava_registered: String!
  nichiju_registered: String!
}

input HospitalCertificationOptionInputType {
  jsava_registered: String!
  nichiju_registered: String!
}

type HospitalConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [HospitalEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type HospitalEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Hospital
}

"""A hospital internal reputation"""
type HospitalInternalReputation {
  id: BigInt!
  remark: String!
  star: Int!
}

input HospitalInternalReputationInputType {
  remark: String!
  star: Int!
}

"""A hospital night service option"""
type HospitalNightServiceOption {
  id: BigInt!
  remark: String!
  status: String!
}

input HospitalNightServiceOptionInputType {
  remark: String!
  status: String!
}

"""A hospital night urgent action option"""
type HospitalNightUrgentActionOption {
  id: BigInt!
  status: String!
}

input HospitalNightUrgentActionOptionInputType {
  status: String!
}

"""A hospital reservation status"""
type HospitalReservationStatus {
  id: BigInt!
  remark: String!
  required: String!
  reservable: String!
}

input HospitalReservationStatusInputType {
  remark: String!
  required: String!
  reservable: String!
}

"""A internal user"""
type InternalUser {
  email: String!
  id: BigInt!
  name: String!
  role: Role!
}

"""A maker"""
type Maker {
  id: Int!
  name: String!
}

type Mutation {
  allocateStock(id: Int!, internalUserId: BigInt!): Stock!
  createHospital(deleted: Boolean!, internal_memo: String!, name: String!, url: String): Hospital!
  createInternalUser(email: String!, name: String!, password: String!, roleId: Int!): InternalUser!
  createMaker(name: String!): Maker!
  createProduct(file: Upload!, makerId: Int!, name: String!, productTagIds: [Int!]!, remark: String!): Product!
  createProductTagGroup(name: String!): ProductTagGroup!
  createProductTaggings(productId: Int!, productTagIds: [Int!]!): Product!
  createProductTags(productTagGroupId: Int!, productTags: [CreateProductTagsProductTagInputType!]!): BatchPayload!
  createStockRequest(requestProducts: [CreateStockRequestrequestProductsInputType!]!): StockRequest!
  createStocks(productId: Int!, stocks: [CreateStocksStocksInputType!]!): [Stock!]!
  deleteInternalUser(id: BigInt!): Delete!
  deleteMaker(id: Int!): Delete!
  deleteProductTag(id: Int!): Delete!
  deleteProductTagging(id: Int!): Delete!
  deleteStock(id: Int!): Delete!
  returnStock(id: Int!): Stock!
  updateHospital(deleted: Boolean!, hospitalAddressInput: HospitalAddressInputType!, hospitalBusinessFormInput: HospitalBusinessFormInputType!, hospitalCertificationOptionInput: HospitalCertificationOptionInputType!, hospitalInternalReputationInput: HospitalInternalReputationInputType!, hospitalNightServiceOptionInput: HospitalNightServiceOptionInputType!, hospitalNightUrgentActionOptionInput: HospitalNightUrgentActionOptionInputType!, hospitalReservationStatusInput: HospitalReservationStatusInputType!, id: BigInt!, internal_memo: String!, name: String!, url: String!): Hospital!
  updateInternalUser(email: String!, id: BigInt!, name: String!, password: String!, roleId: Int!): InternalUser!
  updateMaker(id: Int!, name: String!): Maker!
  updateProduct(file: Upload, id: Int!, makerId: Int!, name: String!, remark: String!): Product!
  updateProductTag(id: Int!, name: String!): ProductTag!
  updateProductTagGroup(id: Int!, name: String!): ProductTagGroup!
  updateStockInternalUser(id: Int!, internalUserId: BigInt!): Stock!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

"""A prefecture"""
type Prefecture {
  id: BigInt!
  name: String!
  region: Region!
}

"""A product"""
type Product {
  allocatedStockAmount: Int!
  id: Int!
  maker: Maker!
  name: String!
  productTaggings: [ProductTagging!]!
  remainingStockAmount: Int!
  remark: String!
  stocks: [Stock!]!
  totalStockAmount: Int!
  url: String!
}

type ProductConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProductEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProductEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Product
}

"""A product tag"""
type ProductTag {
  id: Int!
  name: String!
  productTagGroup: ProductTagGroup!
}

"""A product tag group"""
type ProductTagGroup {
  id: Int!
  name: String!
  productTags: [ProductTag!]!
}

"""A product tagging"""
type ProductTagging {
  id: Int!
  productTag: ProductTag!
}

type Query {
  hospital(id: BigInt!): Hospital!
  hospitalConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String
    deleted: Boolean

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
    name: String
    prefectureId: BigInt
  ): HospitalConnection
  hospitals: [Hospital!]!
  internalUser(id: BigInt!): InternalUser!
  internalUsers: [InternalUser!]!
  maker(id: Int!): Maker!
  makers: [Maker!]!
  product(id: Int!): Product!
  productConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    allocatedInternalUserId: Int

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int
    hasStock: Boolean

    """Returns the last n elements from the list."""
    last: Int
    makerId: Int
    name: String
    productTagId: Int
  ): ProductConnection
  productTagGroup(id: Int!): ProductTagGroup!
  productTagGroups: [ProductTagGroup!]!
  products(ids: [Int!]): [Product!]!
  roles: [Role!]!
  session: Session!
  stockRequestConnection(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int
    internalUserId: BigInt

    """Returns the last n elements from the list."""
    last: Int
  ): StockRequestConnection
  stocks(productId: Int!): [Stock!]!
}

"""A region"""
type Region {
  id: BigInt!
  name: String!
}

"""A role"""
type Role {
  id: Int!
  name: String!
}

type Session {
  internalUser: InternalUser!
  token: String!
}

"""A stock"""
type Stock {
  expired_at: DateTime!
  id: Int!
  internalUser: InternalUser!
  product: Product!
  stockAllocation: StockAllocation
}

"""A stock allocation"""
type StockAllocation {
  created_at: DateTime!
  id: Int!
  internalUser: InternalUser!
}

"""A stock request"""
type StockRequest {
  id: Int!
  internalUser: InternalUser!
  stockRegistrations: [StockRequestStockRegistration!]!
}

type StockRequestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [StockRequestEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type StockRequestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: StockRequest
}

"""A stock request stock registration"""
type StockRequestStockRegistration {
  id: Int!
  stock: Stock!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
